name: Java CI
on: [ push, pull_request ]

permissions:
  contents: write
  packages: write
  issues: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with maven
        run: mvn -B clean package -DskipTests

  test-job:
    uses: ./.github/workflows/deploy-workflow.yml

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run tests
        run: mvn -B test
        env:
          PSQL_USER: admin
          PSQL_PASS: admin
          PSQL_DB: postgres
          PSQL_PORT: 5432
          PSQL_HOST: localhost

  bump-version:
    needs:
      - test
    runs-on: ubuntu-latest
    outputs:
      versionTag: ${{ steps.version_tag.outputs.NEXT_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 21
      - name: Install plugins
        run: npm install @semantic-release/git @semantic-release/github @semantic-release/exec semantic-release-monorepo
      - name: Bump version if necessary
        run: npx semantic-release
      - name: Pass version tag
        id: version_tag
        run: touch build.env && cat build.env >> "$GITHUB_OUTPUT"
      - name: Print version tag
        run: cat build.env

  maven-deploy:
    runs-on: ubuntu-latest
    needs:
      - bump-version
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Publish package to github registry
        run: mvn -B deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-deploy:
    runs-on: ubuntu-latest
    env:
      NEXT_VERSION: ${{ needs.bump-version.outputs.versionTag }}
    needs:
      - bump-version
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate against ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build image with latest tag
        run: |
          docker build -t ghcr.io/dotmatthew/github-action-tests:latest .
      - name: build image with version tag
        if: ${{ env.NEXT_VERSION != '' }}
        run: |
          docker tag ghcr.io/dotmatthew/github-action-tests:latest \
          ghcr.io/dotmatthew/github-action-tests:$NEXT_VERSION
      - name: push to docker registry
        run: |
          docker push --all-tags ghcr.io/dotmatthew/github-action-tests
